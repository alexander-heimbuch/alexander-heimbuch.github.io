// Generated by CoffeeScript 1.9.3
(function() {
  define(['jquery', 'render'], function($, render) {
    var feed;
    feed = function(config) {
      var _checkStorage, _clearCache, _onVisit, _resolve, init, items, storage;
      storage = window.localStorage;
      items = [];
      init = function(cb) {
        _clearCache();
        return _resolve(function(feedItems) {
          return $.each(feedItems, function(index, item) {
            item.visited = _checkStorage(item);
            items.push(item);
            return cb();
          });
        });
      };
      _onVisit = function() {
        return $('li').on('click', function() {
          var link;
          link = $(this).data('link');
          $(this).addClass('visited');
          storage.setItem(link, new Date().getTime());
          return location.href = link;
        });
      };
      _checkStorage = function(item) {
        if (localStorage.getItem(item.link)) {
          return 'visited';
        }
        return '';
      };
      _clearCache = function() {
        return $.each(storage, function(url, time) {
          if ((time + (60 * 1000 * 60 * 24)) < new Date().getTime()) {
            return storage.removeItem(url);
          }
        });
      };
      _resolve = function(cb) {
        return $.ajax({
          url: document.location.protocol + '//ajax.googleapis.com/ajax/services/feed/load?v=1.0&num=10&callback=?&q=' + (encodeURIComponent(config.url)),
          dataType: 'json',
          success: function(data) {
            var tmpItems;
            if (!data.responseData.feed || !data.responseData.feed.entries) {
              cb([]);
            }
            tmpItems = [];
            $.each(data.responseData.feed.entries, function(index, entry) {
              return tmpItems.push({
                title: entry.title,
                link: entry.link
              });
            });
            return cb(tmpItems);
          }
        });
      };
      return {
        title: config.title,
        url: config.url,
        items: items,
        init: init,
        render: render(config.node, config.template, {
          items: items,
          title: config.title,
          logo: config.logo,
          color: config.color
        }, _onVisit)
      };
    };
    return feed;
  });

}).call(this);
